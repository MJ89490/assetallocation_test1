/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 06-Aug-2020 10:13:38 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Sequences for Autonumber Columns */

DROP SEQUENCE IF EXISTS "asset"."asset_analytic_id_seq" CASCADE
;

/* Drop Tables */

DROP TABLE IF EXISTS "asset"."asset_analytic" CASCADE
;

/* Create Tables */

CREATE TABLE "asset"."asset_analytic"
(
	"id" serial NOT NULL,
	"category" varchar(50)	 NOT NULL,
	"asset_id" integer NOT NULL,
	"value" numeric(32,16) NOT NULL,
	"source_id" integer NOT NULL,
	"business_tstzrange" tstzrange NOT NULL,
	"system_tstzrange" tstzrange NOT NULL DEFAULT tstzrange(now(), 'infinity', '[)'),
	"execution_state_id" integer NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_category_check" CHECK (category in ('PX_LAST', 'PX_MID', 'DUR_ADJ_MID'))
;

-- ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_asset_id_type_business_tstzrange_excl" CHECK (EXCLUDE USING GIST (asset_id WITH =, type WITH =, business_tstzrange WITH &&))
--
--
-- ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_asset_id_type_system_tstzrange_excl" CHECK (EXCLUDE USING GIST (asset_id WITH =, type WITH =, system_tstzrange WITH &&))
--

/* Create Foreign Key Constraints */

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_source_fkey"
	FOREIGN KEY ("source_id") REFERENCES "lookup"."source" ("id") ON DELETE No Action ON UPDATE No Action

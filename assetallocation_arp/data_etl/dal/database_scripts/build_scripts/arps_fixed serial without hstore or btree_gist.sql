/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.0 		*/
/*  Created On : 14-Jul-2020 13:59:08 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */


/* Create schemas*/

CREATE SCHEMA IF NOT EXISTS asset;
CREATE SCHEMA IF NOT EXISTS curve;
CREATE SCHEMA IF NOT EXISTS lookup;
CREATE SCHEMA IF NOT EXISTS arp;
CREATE SCHEMA IF NOT EXISTS fund;
CREATE SCHEMA IF NOT EXISTS audit;
CREATE SCHEMA IF NOT EXISTS lookup;
CREATE SCHEMA IF NOT EXISTS config;


/* Drop Tables */

DROP TABLE IF EXISTS "asset"."asset" CASCADE
;

DROP TABLE IF EXISTS "asset"."asset_analytic" CASCADE
;

DROP TABLE IF EXISTS "lookup"."country" CASCADE
;

DROP TABLE IF EXISTS "lookup"."currency" CASCADE
;

DROP TABLE IF EXISTS "arp"."effect_asset" CASCADE
;

DROP TABLE IF EXISTS "arp"."effect" CASCADE
;

DROP TABLE IF EXISTS "arp"."fica_asset" CASCADE
;

DROP TABLE IF EXISTS "arp"."fica" CASCADE
;

DROP TABLE IF EXISTS "fund"."fund" CASCADE
;

DROP TABLE IF EXISTS "arp"."fund_strategy_asset_weight" CASCADE
;

DROP TABLE IF EXISTS "arp"."fund_strategy" CASCADE
;

DROP TABLE IF EXISTS "lookup"."source" CASCADE
;

DROP TABLE IF EXISTS "arp"."strategy" CASCADE
;

DROP TABLE IF EXISTS "arp"."strategy_asset_analytic" CASCADE
;

DROP TABLE IF EXISTS "arp"."times_asset" CASCADE
;

DROP TABLE IF EXISTS "arp"."app_user" CASCADE
;

DROP TABLE IF EXISTS "arp"."times" CASCADE
;

DROP TABLE IF EXISTS "audit"."logged_action" CASCADE
;

DROP TABLE IF EXISTS "curve"."ticker" CASCADE
;

DROP TABLE IF EXISTS "config"."execution" CASCADE
;

DROP TABLE IF EXISTS "config"."execution_state" CASCADE
;

/* Drop Sequences for Autonumber Columns */

DROP SEQUENCE IF EXISTS "asset"."asset_id_seq"
;

DROP SEQUENCE IF EXISTS "asset"."asset_analytic_id_seq"
;

DROP SEQUENCE IF EXISTS "asset"."asset_analytic_asset_id_seq"
;

DROP SEQUENCE IF EXISTS "lookup"."country_id_seq"
;

DROP SEQUENCE IF EXISTS "lookup"."currency_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."effect_asset_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."fica_asset_id_seq"
;

DROP SEQUENCE IF EXISTS "fund"."fund_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."fund_strategy_asset_weight_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."fund_strategy_fund_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."fund_strategy_id_seq"
;

DROP SEQUENCE IF EXISTS "lookup"."source_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."strategy_asset_analytic_id_seq"
;

DROP SEQUENCE IF EXISTS "arp"."times_asset_id_seq"
;

DROP SEQUENCE IF EXISTS "audit"."logged_action_id_seq"
;

DROP SEQUENCE IF EXISTS "config"."execution_id_seq"
;

/* Create Functions */

CREATE OR REPLACE FUNCTION audit.audit_table(target_table regclass, audit_rows boolean, audit_query_text boolean, ignored_cols text[]) RETURNS void AS $body$
DECLARE
  stm_targets text = 'INSERT OR UPDATE OR DELETE OR TRUNCATE';
  _q_txt text;
  _ignored_cols_snip text = '';
BEGIN
    EXECUTE 'DROP TRIGGER IF EXISTS audit_trigger_row ON ' || target_table;
    EXECUTE 'DROP TRIGGER IF EXISTS audit_trigger_stm ON ' || target_table;

    IF audit_rows THEN
        IF array_length(ignored_cols,1) > 0 THEN
            _ignored_cols_snip = ', ' || quote_literal(ignored_cols);
        END IF;
        _q_txt = 'CREATE TRIGGER audit_trigger_row AFTER INSERT OR UPDATE OR DELETE ON ' ||
                 target_table ||
                 ' FOR EACH ROW EXECUTE PROCEDURE audit.if_modified_func(' ||
                 quote_literal(audit_query_text) || _ignored_cols_snip || ');';
        RAISE NOTICE '%',_q_txt;
        EXECUTE _q_txt;
        stm_targets = 'TRUNCATE';
    ELSE
    END IF;

    _q_txt = 'CREATE TRIGGER audit_trigger_stm AFTER ' || stm_targets || ' ON ' ||
             target_table ||
             ' FOR EACH STATEMENT EXECUTE PROCEDURE audit.if_modified_func('||
             quote_literal(audit_query_text) || ');';
    RAISE NOTICE '%',_q_txt;
    EXECUTE _q_txt;

END;
$body$
language 'plpgsql';

-- Pg doesn't allow variadic calls with 0 params, so provide a wrapper
CREATE OR REPLACE FUNCTION audit.audit_table(target_table regclass, audit_rows boolean, audit_query_text boolean) RETURNS void AS $body$
SELECT audit.audit_table($1, $2, $3, ARRAY[]::text[]);
$body$ LANGUAGE SQL;

COMMENT ON FUNCTION audit.audit_table(regclass, boolean, boolean, text[]) IS $body$
Add auditing support to a table.

Arguments:
   target_table:     Table name, schema qualified if not on search_path
   audit_rows:       Record each row change, or only audit at a statement level
   audit_query_text: Record the text of the client query that triggered the audit event?
   ignored_cols:     Columns to exclude from update diffs, ignore updates that change only ignored cols.
$body$;

/* Create Tables */

CREATE TABLE "asset"."asset"
(
	"id" serial NOT NULL,
	"spot_code" varchar(50)	 NOT NULL,
	"name" varchar(50)	 NOT NULL,
	"ndf_code" varchar(50)	 NOT NULL,
	"cost" numeric(32,16) NULL,
	"description" varchar(100)	 NULL,
	"future_ticker" varchar(50)	 NULL,
	"signal_ticker" varchar(50)	 NULL,
	"generic_yield_ticker" varchar(50)	 NULL,
	"s_leverage" integer NULL,
	"currency_id" integer NOT NULL,
	"country_id" integer NOT NULL,
	"asset_class" varchar(50)	 NOT NULL,
	"execution_state_id" integer NOT NULL,
	"type" varchar(50)	 NOT NULL,
	"tr_flag" boolean NOT NULL,
	"ticker" varchar(50)	 NOT NULL
)
;

CREATE TABLE "asset"."asset_analytic"
(
	"id" serial NOT NULL,
	"type" varchar(50)	 NOT NULL,
	"asset_id" integer NOT NULL,
	"value" numeric(32,16) NOT NULL,
	"source_id" integer NOT NULL,
	"business_tstzrange" tstzrange NOT NULL,
	"system_tstzrange" tstzrange NOT NULL DEFAULT tstzrange(now(), 'infinity', '[)'),
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "lookup"."country"
(
	"country" char(2)	 NOT NULL,
	"region" varchar(50)	 NULL,
	"id" serial NOT NULL
)
;

CREATE TABLE "lookup"."currency"
(
	"id" serial NOT NULL,
	"currency" char(3)	 NOT NULL
)
;

CREATE TABLE "arp"."effect_asset"
(
	"position_size" numeric(32,16) NOT NULL,
	"id" serial NOT NULL,
	"strategy_id" integer NOT NULL,
	"asset_id" integer NOT NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."effect"
(
	"frequency" frequency NOT NULL,
	"day_of_week" integer NOT NULL,
	"trend_indicator" varchar(50)	 NOT NULL,
	"moving_average_short_term" int NOT NULL,
	"moving_average_long_term" int NOT NULL,
	"include_shorts_flag" boolean NOT NULL,
	"interest_rate_cut_off_long" numeric(32,16) NOT NULL,
	"execution_state_id" integer NOT NULL,
	"interest_rate_cut_off_short" numeric(32,16) NOT NULL,
	"carry_type" varchar(50)	 NOT NULL,
	"inflation_lag" interval NOT NULL,
	"realtime_inflation_forecast_flag" boolean NOT NULL,
	"closing_threshold" numeric(32,16) NOT NULL,
	"cost" numeric(32,16) NOT NULL,
	"strategy_id" integer NOT NULL,
	"version" serial NOT NULL
)
;

CREATE TABLE "arp"."fica_asset"
(
	"asset_id" integer NOT NULL,
	"id" serial NOT NULL,
	"strategy_id" integer NULL,
	"soverign_ticker_id" integer NOT NULL,
	"swap_ticker_id" integer NOT NULL,
	"swap_cr_ticker_id" integer NOT NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."fica"
(
	"tenor" integer NOT NULL,
	"coupon" numeric(32,16) NOT NULL,
	"curve" varchar(50)	 NOT NULL,
	"trading_cost" integer NOT NULL,
	"business_tstzrange" tstzrange NOT NULL,
	"strategy_weights" numeric(32,16)[] NOT NULL,
	"strategy_id" integer NOT NULL,
	"execution_state_id" integer NOT NULL,
	"version" serial NOT NULL
)
;

CREATE TABLE "fund"."fund"
(
	"id" serial NOT NULL,
	"name" varchar(100)	 NOT NULL,
	"currency_id" integer NOT NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."fund_strategy_asset_weight"
(
	"id" serial NOT NULL,
	"fund_strategy_id" integer NOT NULL,
	"asset_id" integer NOT NULL,
	"strategy_weight" numeric(32,16) NOT NULL,
	"implemented_weight" numeric(32,16) NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."fund_strategy"
(
	"fund_id" integer NOT NULL,
	"id" serial NOT NULL,
	"business_datetime" timestamp with time zone NOT NULL,
	"strategy_id" integer NOT NULL,
	"system_datetime" timestamp with time zone NOT NULL DEFAULT now(),
	"weight" numeric(32,16) NOT NULL,
	"save_output_flag" boolean NOT NULL,
	"execution_state_id" integer NOT NULL,
	"app_user_id" varchar(7)	 NOT NULL,
	"python_code_version" varchar (50) NOT NULL
)
;

CREATE TABLE "lookup"."source"
(
	"id" serial NOT NULL,
	"source" varchar(50)	 NOT NULL
)
;

CREATE TABLE "arp"."strategy"
(
	"id" serial NOT NULL,
	"name" varchar(50)	 NOT NULL,
	"description" varchar(100)	 NULL,
	"app_user_id" varchar(7)	 NOT NULL,
	"system_tstzrange" tstzrange NOT NULL DEFAULT tstzrange(now(), 'infinity', '[)'),
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."strategy_asset_analytic"
(
	"id" serial NOT NULL,
	"fund_strategy_id" integer NOT NULL,
	"asset_id" integer NOT NULL,
	"type" varchar(50)	 NOT NULL,
	"subtype" varchar(50)	 NOT NULL,
	"value" numeric(32,16) NOT NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."times_asset"
(
	"id" serial NOT NULL,
	"asset_id" integer NOT NULL,
	"strategy_id" integer NOT NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."app_user"
(
	"id" varchar(7)	 NOT NULL,
	"name" varchar(100)	 NOT NULL,
	"email" varchar(200)	 NULL,
	"execution_state_id" integer NOT NULL
)
;

CREATE TABLE "arp"."times"
(
	"time_lag" interval NOT NULL,
	"leverage_type" char(1)	 NOT NULL,
	"volatility_window" integer NOT NULL,
	"short_signals" numeric(32,16)[] NOT NULL,
	"long_signals" numeric(32,16)[] NOT NULL,
	"frequency" frequency NOT NULL,
	"day_of_week" integer NOT NULL,
	"execution_state_id" integer NOT NULL,
	"strategy_id" integer NOT NULL,
	"version" serial NOT NULL
)
;

CREATE TABLE "audit"."logged_action"
(
	"id" bigserial NOT NULL,
	"schema_name" text NOT NULL,
	"table_name" text NOT NULL,
	"session_user_name" text NOT NULL,
	"action_tstamp_tx" time with time zone NOT NULL,
	"action_tstamp_stm" time with time zone NOT NULL,
	"transaction_id" bigint NULL,
	"application_name" text NULL,
	"client_query " text NULL,
	"action" text NOT NULL,
	--"row_data" hstore NULL,
	--"changed_fields" hstore NULL,
	"statement_only" boolean NOT NULL
)
;

CREATE TABLE "curve"."ticker"
(
	"execution_state_id" integer NOT NULL,
	"type" varchar(50)	 NOT NULL,
	"id" integer NOT NULL,
	"ticker_3m" varchar(50)	 NULL,
	"ticker_1y" varchar(50)	 NULL,
	"ticker_2y" varchar(50)	 NULL,
	"ticker_3y" varchar(50)	 NULL,
	"ticker_4y" varchar(50)	 NULL,
	"ticker_5y" varchar(50)	 NULL,
	"ticker_6y" varchar(50)	 NULL,
	"ticker_7y" varchar(50)	 NULL,
	"ticker_8y" varchar(50)	 NULL,
	"ticker_9y" varchar(50)	 NULL,
	"ticker_10y" varchar(50)	 NULL,
	"ticker_15y" varchar(50)	 NULL,
	"ticker_20y" varchar(50)	 NULL,
	"ticker_30y" varchar(50)	 NULL
)
;

CREATE TABLE "config"."execution"
(
	"id" serial NOT NULL,
	"name" varchar(50)	 NOT NULL,
	"description" varchar(100)	 NULL,
	"in_use" boolean NOT NULL DEFAULT 't'
)
;

CREATE TABLE "config"."execution_state"
(
	"id" serial NOT NULL,
	"system_datetime" time with time zone NOT NULL,
	"execution_id" integer NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE "asset"."asset" ADD CONSTRAINT "asset_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "asset"."asset" ADD CONSTRAINT "asset_ticker_key" UNIQUE ("ticker")
;

ALTER TABLE "asset"."asset" ADD CONSTRAINT "asset_asset_class_check" CHECK (asset_class in ('Equity', 'Fixed Income', 'FX', 'Commodity', 'Credit'))
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_type_check" CHECK (type in ('PX_LAST', 'PX_MID', 'DUR_ADJ_MID'))
;

-- ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_asset_id_type_business_tstzrange_excl" EXCLUDE USING GIST (asset_id WITH =, type WITH =, business_tstzrange WITH &&)
-- ;
--
-- ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_asset_id_type_system_tstzrange_excl" EXCLUDE USING GIST (asset_id WITH =, type WITH =, system_tstzrange WITH &&)
-- ;

ALTER TABLE "lookup"."country" ADD CONSTRAINT "country_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "lookup"."country" ADD CONSTRAINT "country_country_key" UNIQUE ("country")
;

ALTER TABLE "lookup"."currency" ADD CONSTRAINT "currency_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "lookup"."currency" ADD CONSTRAINT "currency_currency_key" UNIQUE ("currency")
;

ALTER TABLE "arp"."effect_asset" ADD CONSTRAINT "effect_asset_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."effect_asset" ADD CONSTRAINT "effect_asset_asset_id_strategy_id_key" UNIQUE ("asset_id","strategy_id")
;

ALTER TABLE "arp"."effect" ADD CONSTRAINT "effect_pkey"
	PRIMARY KEY ("strategy_id")
;

ALTER TABLE "arp"."effect" ADD CONSTRAINT "effect_day_of_week_check" CHECK (day_of_week in (0, 1, 2, 3, 4, 5, 6))
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_asset_id_strategy_id_key" UNIQUE ("asset_id","strategy_id")
;

ALTER TABLE "arp"."fica" ADD CONSTRAINT "fica_pkey"
	PRIMARY KEY ("strategy_id")
;

ALTER TABLE "fund"."fund" ADD CONSTRAINT "fund_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "fund"."fund" ADD CONSTRAINT "fund_name_key" UNIQUE ("name")
;

ALTER TABLE "arp"."fund_strategy_asset_weight" ADD CONSTRAINT "fund_strategy_asset_weight_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."fund_strategy_asset_weight" ADD CONSTRAINT "fund_strategy_asset_weight_fund_strategy_id_asset_id_key" UNIQUE ("fund_strategy_id","asset_id")
;

ALTER TABLE "arp"."fund_strategy" ADD CONSTRAINT "fund_strategy_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."fund_strategy" ADD CONSTRAINT "fund_strategy_fund_id_strategy_id_business_datetime_system_datetime_key" UNIQUE ("fund_id","strategy_id","business_datetime","system_datetime")
;

ALTER TABLE "lookup"."source" ADD CONSTRAINT "source_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "lookup"."source" ADD CONSTRAINT "source_source_key" UNIQUE ("source")
;

ALTER TABLE "arp"."strategy" ADD CONSTRAINT "strategy_pkey"
	PRIMARY KEY ("id")
;

-- ALTER TABLE "arp"."strategy" ADD CONSTRAINT "strategy_name_system_tstzrange_excl" EXCLUDE USING GIST (name WITH =, system_tstzrange WITH &&)
-- ;

ALTER TABLE "arp"."strategy" ADD CONSTRAINT "strategy_name_check" CHECK (name IN ('times', 'effect', 'fica'))
;

ALTER TABLE "arp"."strategy_asset_analytic" ADD CONSTRAINT "strategy_asset_analytic_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."strategy_asset_analytic" ADD CONSTRAINT "strategy_asset_analytic_fund_strategy_id_asset_id_type_subtype_key" UNIQUE ("fund_strategy_id","asset_id","type","subtype")
;

ALTER TABLE "arp"."strategy_asset_analytic" ADD CONSTRAINT "strategy_asset_analytic_type_subtype_check" CHECK (
	(type IN ('performance', 'signal'))
AND
	(CASE
		WHEN type = 'performance' THEN subtype in ('carry', 'spot', 'total return', 'excess return')
		ELSE subtype in ('carry', 'momentum', 'value')
	END)
)
;

ALTER TABLE "arp"."times_asset" ADD CONSTRAINT "times_asset_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."times_asset" ADD CONSTRAINT "times_asset_asset_id_strategy_id_key" UNIQUE ("asset_id","strategy_id")
;

ALTER TABLE "arp"."app_user" ADD CONSTRAINT "app_user_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "arp"."app_user" ADD CONSTRAINT "app_user_email_key" UNIQUE ("email")
;

ALTER TABLE "arp"."times" ADD CONSTRAINT "times_pkey"
	PRIMARY KEY ("strategy_id")
;

ALTER TABLE "arp"."times" ADD CONSTRAINT "times_day_of_week_check" CHECK (day_of_week in (0, 1, 2, 3, 4, 5, 6))
;

ALTER TABLE "arp"."times" ADD CONSTRAINT "times_leverage_type_check" CHECK (leverage_type in ('e', 'n', 'v', 's'))
;

ALTER TABLE "audit"."logged_action" ADD CONSTRAINT "logged_action_pkey"
	PRIMARY KEY ("id")
;

CREATE INDEX "logged_action_action_tstamp_tx_stm_idx" ON "audit"."logged_action" ("action_tstamp_stm" ASC)
;

CREATE INDEX "logged_action_action_idx" ON "audit"."logged_action" ("action" ASC)
;

ALTER TABLE "curve"."ticker" ADD CONSTRAINT "ticker_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "curve"."ticker" ADD CONSTRAINT "ticker_type_check" CHECK (type IN ('soverign', 'swap', 'cr_swap'))
;

ALTER TABLE "config"."execution" ADD CONSTRAINT "execution_pkey"
	PRIMARY KEY ("id")
;

ALTER TABLE "config"."execution" ADD CONSTRAINT "execution_name_key" UNIQUE ("name")
;

ALTER TABLE "config"."execution_state" ADD CONSTRAINT "execution_state_pkey"
	PRIMARY KEY ("id")
;

/* Create Foreign Key Constraints */

ALTER TABLE "arp"."app_user" ADD CONSTRAINT "FK_app_user_execution_state"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset" ADD CONSTRAINT "asset_country_fkey"
	FOREIGN KEY ("country_id") REFERENCES "lookup"."country" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset" ADD CONSTRAINT "asset_currency_fkey"
	FOREIGN KEY ("currency_id") REFERENCES "lookup"."currency" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset" ADD CONSTRAINT "asset_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "asset"."asset_analytic" ADD CONSTRAINT "asset_analytic_source_fkey"
	FOREIGN KEY ("source_id") REFERENCES "lookup"."source" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."effect_asset" ADD CONSTRAINT "effect_asset_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."effect_asset" ADD CONSTRAINT "effect_asset_effect_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."effect" ("strategy_id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."effect_asset" ADD CONSTRAINT "effect_asset_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."effect" ADD CONSTRAINT "effect_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."effect" ADD CONSTRAINT "effect_strategy_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."strategy" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_fica_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."fica" ("strategy_id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_ticker_soverign_fkey"
	FOREIGN KEY ("soverign_ticker_id") REFERENCES "curve"."ticker" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_ticker_swap_cr_fkey"
	FOREIGN KEY ("swap_cr_ticker_id") REFERENCES "curve"."ticker" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica_asset" ADD CONSTRAINT "fica_asset_ticker_swap_fkey"
	FOREIGN KEY ("swap_ticker_id") REFERENCES "curve"."ticker" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica" ADD CONSTRAINT "fica_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fica" ADD CONSTRAINT "fica_strategy_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."strategy" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "fund"."fund" ADD CONSTRAINT "fund_currency_fkey"
	FOREIGN KEY ("currency_id") REFERENCES "lookup"."currency" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "fund"."fund" ADD CONSTRAINT "fund_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fund_strategy_asset_weight" ADD CONSTRAINT "fund_strategy_asset_weight_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fund_strategy_asset_weight" ADD CONSTRAINT "fund_strategy_asset_weight_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fund_strategy_asset_weight" ADD CONSTRAINT "fund_strategy_asset_weight_fund_strategy_fkey"
	FOREIGN KEY ("fund_strategy_id") REFERENCES "arp"."fund_strategy" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fund_strategy" ADD CONSTRAINT "fund_strategy_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fund_strategy" ADD CONSTRAINT "fund_strategy_strategy_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."strategy" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."fund_strategy" ADD CONSTRAINT "fund_strategy_app_user_fkey"
	FOREIGN KEY ("app_user_id") REFERENCES "arp"."app_user" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."strategy" ADD CONSTRAINT "strategy_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."strategy" ADD CONSTRAINT "strategy_app_user_fkey"
	FOREIGN KEY ("app_user_id") REFERENCES "arp"."app_user" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."strategy_asset_analytic" ADD CONSTRAINT "strategy_asset_analytic_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."strategy_asset_analytic" ADD CONSTRAINT "strategy_asset_analytic_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."strategy_asset_analytic" ADD CONSTRAINT "strategy_asset_analytic_fund_strategy_fkey"
	FOREIGN KEY ("fund_strategy_id") REFERENCES "arp"."fund_strategy" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."times_asset" ADD CONSTRAINT "times_asset_asset_fkey"
	FOREIGN KEY ("asset_id") REFERENCES "asset"."asset" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."times_asset" ADD CONSTRAINT "times_asset_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."times_asset" ADD CONSTRAINT "times_asset_times_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."times" ("strategy_id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."times" ADD CONSTRAINT "times_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "arp"."times" ADD CONSTRAINT "times_strategy_fkey"
	FOREIGN KEY ("strategy_id") REFERENCES "arp"."strategy" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "curve"."ticker" ADD CONSTRAINT "ticker_execution_state_fkey"
	FOREIGN KEY ("execution_state_id") REFERENCES "config"."execution_state" ("id") ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "config"."execution_state" ADD CONSTRAINT "execution_state_execution_fkey"
	FOREIGN KEY ("execution_id") REFERENCES "config"."execution" ("id") ON DELETE No Action ON UPDATE No Action
;
